# References

# Define cache store
proxy_cache_path /var/cache/mirror levels=1:2
                                   keys_zone=cache_mirror:100m
                                   max_size=$MAX_CACHE_SIZE
                                   use_temp_path=off 
                                   inactive=$CACHE_INACTIVE;

# Define limit zone
limit_conn_zone $server_name zone=perserver:10m;

# Disable Access Log
access_log off;

server {
  listen 80;

  location / {
    # Limit maximum connections by client
    limit_conn perserver     $MAX_CLIENT_CONNECTED;
    
    # This directive sets the maximum size of the temporary file
    # When buffering of responses from the proxied server is enabled, 
    # and the whole response does not fit into the buffers.
    proxy_max_temp_file_size 0;
    
    # Sets the protocol and address of a proxied server and an optional URI to which a location should be mapped
    proxy_pass               $REMOTE_PROTO://$REMOTE_HOST;
    
    # Rewrite response URLS using sub module
    sub_filter '$REWRITE_HOST' '$REWRITE_URL';
    
    # Rewrite all occurrences
    sub_filter_once off;
	
    # Preserve the "Last-Modified" header field from the original response
    sub_filter_last_modified on;
    
    # Enables string replacement in responses with the specified MIME types
    sub_filter_types application/json application/xml text/json

    # Only one request at a time will be allowed to populate a new cache element 
    proxy_cache_lock         on;
    
    # Enables revalidation of expired cache items using conditional requests
    # with the “If-Modified-Since” and “If-None-Match” header fields.
    proxy_cache_revalidate   on;
    
    # When the time expires, the request will be passed to the proxied server, however, the response will not be cached
    proxy_cache_lock_timeout $CACHE_LOCK_TIMEOUT;
   
    # Disables processing of certain response header fields from the proxied server
    proxy_ignore_headers     Cache-Control;
   
    # Sets caching time for different response codes
    proxy_cache_valid        any $CACHE_TTL;
    
    # Append REMOTE_HOST Header
    proxy_set_header         Host $REMOTE_HOST;
    
    # Pass User-Agent Header
    proxy_set_header         User-Agent $http_user_agent;
    
    # Force using SNI
    proxy_ssl_server_name on;
    
    # Enable cache
    proxy_cache              cache_mirror;
    
    # Determines in which cases a stale cached response can be used during communication with the proxied server
    proxy_cache_use_stale    error timeout invalid_header updating
                             http_500 http_502 http_503 http_504;
    
    # Misc
    proxy_http_version 1.1;
    proxy_pass_request_headers off;
	
    # Append X-Cache Header
    add_header X-Cache $upstream_cache_status;
  }
}
